/**
 * Given n non-negative integers representing the histogram's bar height where the width of each bar is 1,
 * find the area of largest rectangle in the histogram.
 *
 *
 * Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].
 *
 * For example,
 * Given heights = [2,1,5,6,2,3],
 * return 10
*/
$heights = [2,1,5,6,2,3];
$max_area = 0;
/**************** first solution****************************/
for($i=0;isset($heights[$i]);$i++){
    $left = $i-1;
    $right = $i+1;
    $width = 1;
    $height = $heights[$i];
    while($left>0 && ($heights[$left]>= $height))
    {
        $width++;
        $left--;
    }
    while(isset($heights[$right]) && ($heights[$right]>= $height))
    {
        $width++;
        $right++;
    }
    $max_area = max($max_area,($width*$height));
}
echo $max_area;
/**************** second solution****************************/

$stack = [];
$max_area = 0;
for($i=0;$i<count($heights);$i++){
    if(empty($stack)||$heights[$i] >= $heights[end($stack)]){
        array_push($stack,$i);
    }else{
        $j = array_pop($stack);
        $width = empty($stack) ? $i : $i - end($stack) - 1;
        $max_area = max($max_area,$width*$heights[$j]);
        $i--;
    }
}
while(!empty($stack)){
    $j = array_pop($stack);
    $width = empty($stack) ? $i : $i - end($stack) - 1;
    $max_area = max($max_area,$width*$heights[$j]);
}

echo $max_area;

/**************** third solution****************************/

$heights = [2,1,5,6,2,3];
$stack = [];
$max_area = 0;
for($i=0;$i<=count($heights);$i++){

    $h = ($i==count($heights) ? 0 : $heights[$i]);
    if(empty($stack)|| $h >= $heights[end($stack)]){
        array_push($stack,$i);
    }else{
        $j = array_pop($stack);
        $width = empty($stack) ? $i : $i - end($stack) - 1;
        $max_area = max($max_area,$width * $heights[$j]);
        $i--;
    }
}
echo $max_area;
